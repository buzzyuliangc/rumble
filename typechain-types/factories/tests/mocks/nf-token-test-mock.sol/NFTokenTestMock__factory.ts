/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTokenTestMock,
  NFTokenTestMockInterface,
} from "../../../../tests/mocks/nf-token-test-mock.sol/NFTokenTestMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_CURRENT_OWNER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600060208190527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff1990811660019081179092556380ac58cd60e01b9092527ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed7808008054909216179055600580546001600160a01b0319163317905561143e8061009e6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde14610277578063e985e9c51461028a578063f2fde38b146102c6578063f3fe3bc3146102d957600080fd5b806370a08231146101fe578063860d248a1461021f5780638da5cb5b14610251578063a22cb4651461026457600080fd5b806340c10f19116100d357806340c10f19146101b257806342842e0e146101c557806342966c68146101d85780636352211e146101eb57600080fd5b806301ffc9a714610105578063081812fc1461015f578063095ea7b31461018a57806323b872dd1461019f575b600080fd5b61014a61011336600461110d565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b61017261016d366004611131565b6102fe565b6040516001600160a01b039091168152602001610156565b61019d610198366004611166565b610380565b005b61019d6101ad366004611190565b610550565b61019d6101c0366004611166565b61070b565b61019d6101d3366004611190565b610763565b61019d6101e6366004611131565b610783565b6101726101f9366004611131565b6107d9565b61021161020c3660046111cc565b610831565b604051908152602001610156565b6102446040518060400160405280600681526020016518189c18181960d11b81525081565b6040516101569190611234565b600554610172906001600160a01b031681565b61019d610272366004611247565b610895565b61019d610285366004611283565b610901565b61014a61029836600461131e565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b61019d6102d43660046111cc565b61094a565b6102446040518060400160405280600681526020016530313830303160d01b81525081565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b031661035e5760405162461bcd60e51b81526004016103559190611234565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b0316338114806103cb57506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020017f30303330303300000000000000000000000000000000000000000000000000008152509061041f5760405162461bcd60e51b81526004016103559190611234565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166104795760405162461bcd60e51b81526004016103559190611234565b50600084815260016020908152604091829020548251808401909352600683527f3030333030380000000000000000000000000000000000000000000000000000918301919091526001600160a01b03908116919087168214156104f05760405162461bcd60e51b81526004016103559190611234565b5060008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60008181526001602052604090205481906001600160a01b03163381148061058e57506000828152600260205260409020546001600160a01b031633145b806105bc57506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b815250906105f95760405162461bcd60e51b81526004016103559190611234565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166106535760405162461bcd60e51b81526004016103559190611234565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190881682146106b25760405162461bcd60e51b81526004016103559190611234565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b0387166106f75760405162461bcd60e51b81526004016103559190611234565b506107028686610a35565b50505050505050565b60055460408051808201909152600681526530313830303160d01b6020820152906001600160a01b031633146107545760405162461bcd60e51b81526004016103559190611234565b5061075f8282610ac0565b5050565b61077e83838360405180602001604052806000815250610ba3565b505050565b60055460408051808201909152600681526530313830303160d01b6020820152906001600160a01b031633146107cc5760405162461bcd60e51b81526004016103559190611234565b506107d681610e80565b50565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b0316908161037a5760405162461bcd60e51b81526004016103559190611234565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b0383166108785760405162461bcd60e51b81526004016103559190611234565b50506001600160a01b031660009081526003602052604090205490565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61094385858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ba392505050565b5050505050565b60055460408051808201909152600681526530313830303160d01b6020820152906001600160a01b031633146109935760405162461bcd60e51b81526004016103559190611234565b5060408051808201909152600681526518189c18181960d11b60208201526001600160a01b0382166109d85760405162461bcd60e51b81526004016103559190611234565b506005546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b600081815260016020908152604080832054600290925290912080546001600160a01b03191690556001600160a01b0316610a708183610f52565b610a7a8383610ffb565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60408051808201909152600681526530303330303160d01b60208201526001600160a01b038316610b045760405162461bcd60e51b81526004016103559190611234565b50600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b031615610b5c5760405162461bcd60e51b81526004016103559190611234565b50610b678282610ffb565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008281526001602052604090205482906001600160a01b031633811480610be157506000828152600260205260409020546001600160a01b031633145b80610c0f57506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b81525090610c4c5760405162461bcd60e51b81526004016103559190611234565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b0316610ca65760405162461bcd60e51b81526004016103559190611234565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03908116919089168214610d055760405162461bcd60e51b81526004016103559190611234565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b038816610d4a5760405162461bcd60e51b81526004016103559190611234565b50610d558787610a35565b610d67876001600160a01b03166110a3565b15610e7657604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a0290610da19033908d908c908c90600401611351565b602060405180830381600087803b158015610dbb57600080fd5b505af1158015610dcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df3919061138d565b60408051808201909152600681527f303033303035000000000000000000000000000000000000000000000000000060208201529091507fffffffff000000000000000000000000000000000000000000000000000000008216630a85bd0160e11b14610e735760405162461bcd60e51b81526004016103559190611234565b50505b5050505050505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528291906001600160a01b0316610ed95760405162461bcd60e51b81526004016103559190611234565b50600082815260016020908152604080832054600290925290912080546001600160a01b03191690556001600160a01b0316610f158184610f52565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03848116911614610fad5760405162461bcd60e51b81526004016103559190611234565b506001600160a01b0382166000908152600360205260408120805460019290610fd79084906113d9565b9091555050600090815260016020526040902080546001600160a01b031916905550565b600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156110525760405162461bcd60e51b81526004016103559190611234565b50600081815260016020818152604080842080546001600160a01b0319166001600160a01b03881690811790915584526003909152822080549192909161109a9084906113f0565b90915550505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906110d75750808214155b949350505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146107d657600080fd5b60006020828403121561111f57600080fd5b813561112a816110df565b9392505050565b60006020828403121561114357600080fd5b5035919050565b80356001600160a01b038116811461116157600080fd5b919050565b6000806040838503121561117957600080fd5b6111828361114a565b946020939093013593505050565b6000806000606084860312156111a557600080fd5b6111ae8461114a565b92506111bc6020850161114a565b9150604084013590509250925092565b6000602082840312156111de57600080fd5b61112a8261114a565b6000815180845260005b8181101561120d576020818501810151868301820152016111f1565b8181111561121f576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061112a60208301846111e7565b6000806040838503121561125a57600080fd5b6112638361114a565b91506020830135801515811461127857600080fd5b809150509250929050565b60008060008060006080868803121561129b57600080fd5b6112a48661114a565b94506112b26020870161114a565b935060408601359250606086013567ffffffffffffffff808211156112d657600080fd5b818801915088601f8301126112ea57600080fd5b8135818111156112f957600080fd5b89602082850101111561130b57600080fd5b9699959850939650602001949392505050565b6000806040838503121561133157600080fd5b61133a8361114a565b91506113486020840161114a565b90509250929050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261138360808301846111e7565b9695505050505050565b60006020828403121561139f57600080fd5b815161112a816110df565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156113eb576113eb6113aa565b500390565b60008219821115611403576114036113aa565b50019056fea2646970667358221220005f04fe3d17c6f76acf38a3bd4b80a6e899b0406b010a27fd07ba6b7159c94f64736f6c63430008090033";

type NFTokenTestMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTokenTestMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTokenTestMock__factory extends ContractFactory {
  constructor(...args: NFTokenTestMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTokenTestMock> {
    return super.deploy(overrides || {}) as Promise<NFTokenTestMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTokenTestMock {
    return super.attach(address) as NFTokenTestMock;
  }
  override connect(signer: Signer): NFTokenTestMock__factory {
    return super.connect(signer) as NFTokenTestMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTokenTestMockInterface {
    return new utils.Interface(_abi) as NFTokenTestMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTokenTestMock {
    return new Contract(address, _abi, signerOrProvider) as NFTokenTestMock;
  }
}
