/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  NFTokenMetadataTestMock,
  NFTokenMetadataTestMockInterface,
} from "../../../../tests/mocks/nf-token-metadata-test-mock.sol/NFTokenMetadataTestMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_CURRENT_OWNER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "checkUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c2d38038062001c2d833981016040819052620000349162000266565b600060208181527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff1990811660019081179092557ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed7808008054821683179055635b5e139f60e01b9093527f9562381dfbc2d8b8b66e765249f330164b73e329e5f01670660643571d1974df805490931617909155600880546001600160a01b03191633179055825183918391620000f4916005919085019062000115565b5080516200010a90600690602084019062000115565b505050505062000320565b8280546200012390620002cd565b90600052602060002090601f01602090048101928262000147576000855562000192565b82601f106200016257805160ff191683800117855562000192565b8280016001018555821562000192579182015b828111156200019257825182559160200191906001019062000175565b50620001a0929150620001a4565b5090565b5b80821115620001a05760008155600101620001a5565b600082601f830112620001cc578081fd5b81516001600160401b0380821115620001e957620001e96200030a565b6040516020601f8401601f19168201810183811183821017156200021157620002116200030a565b604052838252858401810187101562000228578485fd5b8492505b838310156200024b57858301810151828401820152918201916200022c565b838311156200025c57848185840101525b5095945050505050565b6000806040838503121562000279578182fd5b82516001600160401b038082111562000290578384fd5b6200029e86838701620001bb565b93506020850151915080821115620002b4578283fd5b50620002c385828601620001bb565b9150509250929050565b600281046001821680620002e257607f821691505b602082108114156200030457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6118fd80620003306000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80638da5cb5b116100cd578063d08eb73211610081578063e985e9c511610066578063e985e9c5146102c7578063f2fde38b146102da578063f3fe3bc3146102ed5761016c565b8063d08eb732146102a1578063d3fc9864146102b45761016c565b8063a22cb465116100b2578063a22cb46514610268578063b88d4fde1461027b578063c87b56dd1461028e5761016c565b80638da5cb5b1461025857806395d89b41146102605761016c565b806342842e0e116101245780636352211e116101095780636352211e1461021d57806370a0823114610230578063860d248a146102505761016c565b806342842e0e146101f757806342966c681461020a5761016c565b8063081812fc11610155578063081812fc146101af578063095ea7b3146101cf57806323b872dd146101e45761016c565b806301ffc9a71461017157806306fdde031461019a575b600080fd5b61018461017f36600461170d565b6102f5565b60405161019191906117f8565b60405180910390f35b6101a2610330565b6040516101919190611803565b6101c26101bd366004611745565b6103c2565b60405161019191906117a8565b6101e26101dd36600461168c565b610444565b005b6101e26101f23660046115aa565b610614565b6101e26102053660046115aa565b6107cf565b6101e2610218366004611745565b6107ef565b6101c261022b366004611745565b610845565b61024361023e36600461155e565b61089d565b6040516101919190611816565b6101a26108f4565b6101c2610916565b6101a2610925565b6101e2610276366004611652565b610934565b6101e26102893660046115e5565b6109a3565b6101a261029c366004611745565b6109ec565b6101a26102af366004611745565b610a58565b6101e26102c23660046116b5565b610afa565b6101846102d5366004611578565b610b94565b6101e26102e836600461155e565b610bc2565b6101a2610cad565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b60606005805461033f9061184e565b80601f016020809104026020016040519081016040528092919081815260200182805461036b9061184e565b80156103b85780601f1061038d576101008083540402835291602001916103b8565b820191906000526020600020905b81548152906001019060200180831161039b57829003601f168201915b5050505050905090565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b03166104225760405162461bcd60e51b81526004016104199190611803565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b03163381148061048f57506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020017f3030333030330000000000000000000000000000000000000000000000000000815250906104e35760405162461bcd60e51b81526004016104199190611803565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b031661053d5760405162461bcd60e51b81526004016104199190611803565b50600084815260016020908152604091829020548251808401909352600683527f3030333030380000000000000000000000000000000000000000000000000000918301919091526001600160a01b03908116919087168214156105b45760405162461bcd60e51b81526004016104199190611803565b5060008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60008181526001602052604090205481906001600160a01b03163381148061065257506000828152600260205260409020546001600160a01b031633145b8061068057506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b815250906106bd5760405162461bcd60e51b81526004016104199190611803565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166107175760405162461bcd60e51b81526004016104199190611803565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190881682146107765760405162461bcd60e51b81526004016104199190611803565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b0387166107bb5760405162461bcd60e51b81526004016104199190611803565b506107c68686610ccf565b50505050505050565b6107ea83838360405180602001604052806000815250610d4a565b505050565b60085460408051808201909152600681526530313830303160d01b6020820152906001600160a01b031633146108385760405162461bcd60e51b81526004016104199190611803565b5061084281611027565b50565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b0316908161043e5760405162461bcd60e51b81526004016104199190611803565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b0383166108e45760405162461bcd60e51b81526004016104199190611803565b506108ee82611047565b92915050565b6040518060400160405280600681526020016518189c18181960d11b81525081565b6008546001600160a01b031681565b60606006805461033f9061184e565b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31906109979085906117f8565b60405180910390a35050565b6109e585858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d4a92505050565b5050505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b9183019190915260609183916001600160a01b0316610a475760405162461bcd60e51b81526004016104199190611803565b50610a5183610a58565b9392505050565b6000818152600760205260409020805460609190610a759061184e565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa19061184e565b8015610aee5780601f10610ac357610100808354040283529160200191610aee565b820191906000526020600020905b815481529060010190602001808311610ad157829003601f168201915b50505050509050919050565b60085460408051808201909152600681526530313830303160d01b6020820152906001600160a01b03163314610b435760405162461bcd60e51b81526004016104199190611803565b50610b4e8484611062565b610b8e8383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061114592505050565b50505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b60085460408051808201909152600681526530313830303160d01b6020820152906001600160a01b03163314610c0b5760405162461bcd60e51b81526004016104199190611803565b5060408051808201909152600681526518189c18181960d11b60208201526001600160a01b038216610c505760405162461bcd60e51b81526004016104199190611803565b506008546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600880546001600160a01b0319166001600160a01b0392909216919091179055565b6040518060400160405280600681526020016530313830303160d01b81525081565b6000818152600160205260409020546001600160a01b0316610cf0826111be565b610cfa81836111dc565b610d048383611285565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008281526001602052604090205482906001600160a01b031633811480610d8857506000828152600260205260409020546001600160a01b031633145b80610db657506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b81525090610df35760405162461bcd60e51b81526004016104199190611803565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b0316610e4d5760405162461bcd60e51b81526004016104199190611803565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03908116919089168214610eac5760405162461bcd60e51b81526004016104199190611803565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b038816610ef15760405162461bcd60e51b81526004016104199190611803565b50610efc8787610ccf565b610f0e876001600160a01b031661132d565b1561101d57604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a0290610f489033908d908c908c906004016117bc565b602060405180830381600087803b158015610f6257600080fd5b505af1158015610f76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9a9190611729565b60408051808201909152600681527f303033303035000000000000000000000000000000000000000000000000000060208201529091507fffffffff000000000000000000000000000000000000000000000000000000008216630a85bd0160e11b1461101a5760405162461bcd60e51b81526004016104199190611803565b50505b5050505050505050565b61103081611369565b60008181526007602052604081206108429161142b565b6001600160a01b031660009081526003602052604090205490565b60408051808201909152600681526530303330303160d01b60208201526001600160a01b0383166110a65760405162461bcd60e51b81526004016104199190611803565b50600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156110fe5760405162461bcd60e51b81526004016104199190611803565b506111098282611285565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600082815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528391906001600160a01b031661119e5760405162461bcd60e51b81526004016104199190611803565b5060008381526007602090815260409091208351610b8e92850190611467565b600090815260026020526040902080546001600160a01b0319169055565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b038481169116146112375760405162461bcd60e51b81526004016104199190611803565b506001600160a01b0382166000908152600360205260408120805460019290611261908490611837565b9091555050600090815260016020526040902080546001600160a01b031916905550565b600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156112dc5760405162461bcd60e51b81526004016104199190611803565b50600081815260016020818152604080842080546001600160a01b0319166001600160a01b03881690811790915584526003909152822080549192909161132490849061181f565b90915550505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906113615750808214155b949350505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528291906001600160a01b03166113c25760405162461bcd60e51b81526004016104199190611803565b506000828152600160205260409020546001600160a01b03166113e4836111be565b6113ee81846111dc565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b5080546114379061184e565b6000825580601f106114495750610842565b601f01602090049060005260206000209081019061084291906114eb565b8280546114739061184e565b90600052602060002090601f01602090048101928261149557600085556114db565b82601f106114ae57805160ff19168380011785556114db565b828001600101855582156114db579182015b828111156114db5782518255916020019190600101906114c0565b506114e79291506114eb565b5090565b5b808211156114e757600081556001016114ec565b80356001600160a01b038116811461032b57600080fd5b60008083601f840112611528578182fd5b50813567ffffffffffffffff81111561153f578182fd5b60208301915083602082850101111561155757600080fd5b9250929050565b60006020828403121561156f578081fd5b610a5182611500565b6000806040838503121561158a578081fd5b61159383611500565b91506115a160208401611500565b90509250929050565b6000806000606084860312156115be578081fd5b6115c784611500565b92506115d560208501611500565b9150604084013590509250925092565b6000806000806000608086880312156115fc578081fd5b61160586611500565b945061161360208701611500565b935060408601359250606086013567ffffffffffffffff811115611635578182fd5b61164188828901611517565b969995985093965092949392505050565b60008060408385031215611664578182fd5b61166d83611500565b915060208301358015158114611681578182fd5b809150509250929050565b6000806040838503121561169e578182fd5b6116a783611500565b946020939093013593505050565b600080600080606085870312156116ca578384fd5b6116d385611500565b935060208501359250604085013567ffffffffffffffff8111156116f5578283fd5b61170187828801611517565b95989497509550505050565b60006020828403121561171e578081fd5b8135610a5181611899565b60006020828403121561173a578081fd5b8151610a5181611899565b600060208284031215611756578081fd5b5035919050565b60008151808452815b8181101561178257602081850181015186830182015201611766565b818111156117935782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60006001600160a01b038087168352808616602084015250836040830152608060608301526117ee608083018461175d565b9695505050505050565b901515815260200190565b600060208252610a51602083018461175d565b90815260200190565b6000821982111561183257611832611883565b500190565b60008282101561184957611849611883565b500390565b60028104600182168061186257607f821691505b6020821081141561043e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b7fffffffff000000000000000000000000000000000000000000000000000000008116811461084257600080fdfea2646970667358221220af33d2cb6d8307e8b94c68dc4d153056b7b35352b4a4a461d238c1d5b7df104864736f6c63430008000033";

type NFTokenMetadataTestMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTokenMetadataTestMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTokenMetadataTestMock__factory extends ContractFactory {
  constructor(...args: NFTokenMetadataTestMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTokenMetadataTestMock> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<NFTokenMetadataTestMock>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): NFTokenMetadataTestMock {
    return super.attach(address) as NFTokenMetadataTestMock;
  }
  override connect(signer: Signer): NFTokenMetadataTestMock__factory {
    return super.connect(signer) as NFTokenMetadataTestMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTokenMetadataTestMockInterface {
    return new utils.Interface(_abi) as NFTokenMetadataTestMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTokenMetadataTestMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTokenMetadataTestMock;
  }
}
