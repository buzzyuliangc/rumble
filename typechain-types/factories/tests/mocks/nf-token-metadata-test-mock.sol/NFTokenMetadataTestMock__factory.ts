/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTokenMetadataTestMock,
  NFTokenMetadataTestMockInterface,
} from "../../../../tests/mocks/nf-token-metadata-test-mock.sol/NFTokenMetadataTestMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_CURRENT_OWNER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "checkUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c0838038062001c08833981016040819052620000349162000288565b600060208181527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff1990811660019081179092557ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed7808008054821683179055635b5e139f60e01b9093527f9562381dfbc2d8b8b66e765249f330164b73e329e5f01670660643571d1974df805490931617909155600880546001600160a01b03191633179055825183918391620000f4916005919085019062000115565b5080516200010a90600690602084019062000115565b50505050506200032f565b8280546200012390620002f2565b90600052602060002090601f01602090048101928262000147576000855562000192565b82601f106200016257805160ff191683800117855562000192565b8280016001018555821562000192579182015b828111156200019257825182559160200191906001019062000175565b50620001a0929150620001a4565b5090565b5b80821115620001a05760008155600101620001a5565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e357600080fd5b81516001600160401b0380821115620002005762000200620001bb565b604051601f8301601f19908116603f011681019082821181831017156200022b576200022b620001bb565b816040528381526020925086838588010111156200024857600080fd5b600091505b838210156200026c57858201830151818301840152908201906200024d565b838211156200027e5760008385830101525b9695505050505050565b600080604083850312156200029c57600080fd5b82516001600160401b0380821115620002b457600080fd5b620002c286838701620001d1565b93506020850151915080821115620002d957600080fd5b50620002e885828601620001d1565b9150509250929050565b600181811c908216806200030757607f821691505b602082108114156200032957634e487b7160e01b600052602260045260246000fd5b50919050565b6118c9806200033f6000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80638da5cb5b116100cd578063d08eb73211610081578063e985e9c511610066578063e985e9c51461032c578063f2fde38b14610368578063f3fe3bc31461037b57600080fd5b8063d08eb73214610306578063d3fc98641461031957600080fd5b8063a22cb465116100b2578063a22cb465146102cd578063b88d4fde146102e0578063c87b56dd146102f357600080fd5b80638da5cb5b146102b257806395d89b41146102c557600080fd5b806342842e0e116101245780636352211e116101095780636352211e1461025957806370a082311461026c578063860d248a1461028d57600080fd5b806342842e0e1461023357806342966c681461024657600080fd5b8063081812fc11610155578063081812fc146101e0578063095ea7b31461020b57806323b872dd1461022057600080fd5b806301ffc9a71461017157806306fdde03146101cb575b600080fd5b6101b661017f36600461150c565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6101d36103a0565b6040516101c29190611576565b6101f36101ee366004611589565b610432565b6040516001600160a01b0390911681526020016101c2565b61021e6102193660046115be565b6104b4565b005b61021e61022e3660046115e8565b610684565b61021e6102413660046115e8565b61083f565b61021e610254366004611589565b61085f565b6101f3610267366004611589565b6108b5565b61027f61027a366004611624565b61090d565b6040519081526020016101c2565b6101d36040518060400160405280600681526020016518189c18181960d11b81525081565b6008546101f3906001600160a01b031681565b6101d3610971565b61021e6102db36600461163f565b610980565b61021e6102ee3660046116c4565b6109ec565b6101d3610301366004611589565b610a35565b6101d3610314366004611589565b610aa1565b61021e610327366004611733565b610b43565b6101b661033a36600461178d565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b61021e610376366004611624565b610bdd565b6101d36040518060400160405280600681526020016530313830303160d01b81525081565b6060600580546103af906117c0565b80601f01602080910402602001604051908101604052809291908181526020018280546103db906117c0565b80156104285780601f106103fd57610100808354040283529160200191610428565b820191906000526020600020905b81548152906001019060200180831161040b57829003601f168201915b5050505050905090565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b03166104925760405162461bcd60e51b81526004016104899190611576565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b0316338114806104ff57506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020017f3030333030330000000000000000000000000000000000000000000000000000815250906105535760405162461bcd60e51b81526004016104899190611576565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166105ad5760405162461bcd60e51b81526004016104899190611576565b50600084815260016020908152604091829020548251808401909352600683527f3030333030380000000000000000000000000000000000000000000000000000918301919091526001600160a01b03908116919087168214156106245760405162461bcd60e51b81526004016104899190611576565b5060008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60008181526001602052604090205481906001600160a01b0316338114806106c257506000828152600260205260409020546001600160a01b031633145b806106f057506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b8152509061072d5760405162461bcd60e51b81526004016104899190611576565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166107875760405162461bcd60e51b81526004016104899190611576565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190881682146107e65760405162461bcd60e51b81526004016104899190611576565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b03871661082b5760405162461bcd60e51b81526004016104899190611576565b506108368686610cc8565b50505050505050565b61085a83838360405180602001604052806000815250610d53565b505050565b60085460408051808201909152600681526530313830303160d01b6020820152906001600160a01b031633146108a85760405162461bcd60e51b81526004016104899190611576565b506108b281611030565b50565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b031690816104ae5760405162461bcd60e51b81526004016104899190611576565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b0383166109545760405162461bcd60e51b81526004016104899190611576565b50506001600160a01b031660009081526003602052604090205490565b6060600680546103af906117c0565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610a2e85858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d5392505050565b5050505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b9183019190915260609183916001600160a01b0316610a905760405162461bcd60e51b81526004016104899190611576565b50610a9a83610aa1565b9392505050565b6000818152600760205260409020805460609190610abe906117c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610aea906117c0565b8015610b375780601f10610b0c57610100808354040283529160200191610b37565b820191906000526020600020905b815481529060010190602001808311610b1a57829003601f168201915b50505050509050919050565b60085460408051808201909152600681526530313830303160d01b6020820152906001600160a01b03163314610b8c5760405162461bcd60e51b81526004016104899190611576565b50610b978484611050565b610bd78383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061113392505050565b50505050565b60085460408051808201909152600681526530313830303160d01b6020820152906001600160a01b03163314610c265760405162461bcd60e51b81526004016104899190611576565b5060408051808201909152600681526518189c18181960d11b60208201526001600160a01b038216610c6b5760405162461bcd60e51b81526004016104899190611576565b506008546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600880546001600160a01b0319166001600160a01b0392909216919091179055565b600081815260016020908152604080832054600290925290912080546001600160a01b03191690556001600160a01b0316610d0381836111ac565b610d0d8383611255565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008281526001602052604090205482906001600160a01b031633811480610d9157506000828152600260205260409020546001600160a01b031633145b80610dbf57506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b81525090610dfc5760405162461bcd60e51b81526004016104899190611576565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b0316610e565760405162461bcd60e51b81526004016104899190611576565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03908116919089168214610eb55760405162461bcd60e51b81526004016104899190611576565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b038816610efa5760405162461bcd60e51b81526004016104899190611576565b50610f058787610cc8565b610f17876001600160a01b03166112fd565b1561102657604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a0290610f519033908d908c908c906004016117f5565b602060405180830381600087803b158015610f6b57600080fd5b505af1158015610f7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa39190611831565b60408051808201909152600681527f303033303035000000000000000000000000000000000000000000000000000060208201529091507fffffffff000000000000000000000000000000000000000000000000000000008216630a85bd0160e11b146110235760405162461bcd60e51b81526004016104899190611576565b50505b5050505050505050565b61103981611339565b60008181526007602052604081206108b29161140b565b60408051808201909152600681526530303330303160d01b60208201526001600160a01b0383166110945760405162461bcd60e51b81526004016104899190611576565b50600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156110ec5760405162461bcd60e51b81526004016104899190611576565b506110f78282611255565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600082815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528391906001600160a01b031661118c5760405162461bcd60e51b81526004016104899190611576565b5060008381526007602090815260409091208351610bd792850190611445565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b038481169116146112075760405162461bcd60e51b81526004016104899190611576565b506001600160a01b0382166000908152600360205260408120805460019290611231908490611864565b9091555050600090815260016020526040902080546001600160a01b031916905550565b600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156112ac5760405162461bcd60e51b81526004016104899190611576565b50600081815260016020818152604080842080546001600160a01b0319166001600160a01b0388169081179091558452600390915282208054919290916112f490849061187b565b90915550505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906113315750808214155b949350505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528291906001600160a01b03166113925760405162461bcd60e51b81526004016104899190611576565b50600082815260016020908152604080832054600290925290912080546001600160a01b03191690556001600160a01b03166113ce81846111ac565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b508054611417906117c0565b6000825580601f10611427575050565b601f0160209004906000526020600020908101906108b291906114c9565b828054611451906117c0565b90600052602060002090601f01602090048101928261147357600085556114b9565b82601f1061148c57805160ff19168380011785556114b9565b828001600101855582156114b9579182015b828111156114b957825182559160200191906001019061149e565b506114c59291506114c9565b5090565b5b808211156114c557600081556001016114ca565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146108b257600080fd5b60006020828403121561151e57600080fd5b8135610a9a816114de565b6000815180845260005b8181101561154f57602081850181015186830182015201611533565b81811115611561576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610a9a6020830184611529565b60006020828403121561159b57600080fd5b5035919050565b80356001600160a01b03811681146115b957600080fd5b919050565b600080604083850312156115d157600080fd5b6115da836115a2565b946020939093013593505050565b6000806000606084860312156115fd57600080fd5b611606846115a2565b9250611614602085016115a2565b9150604084013590509250925092565b60006020828403121561163657600080fd5b610a9a826115a2565b6000806040838503121561165257600080fd5b61165b836115a2565b91506020830135801515811461167057600080fd5b809150509250929050565b60008083601f84011261168d57600080fd5b50813567ffffffffffffffff8111156116a557600080fd5b6020830191508360208285010111156116bd57600080fd5b9250929050565b6000806000806000608086880312156116dc57600080fd5b6116e5866115a2565b94506116f3602087016115a2565b935060408601359250606086013567ffffffffffffffff81111561171657600080fd5b6117228882890161167b565b969995985093965092949392505050565b6000806000806060858703121561174957600080fd5b611752856115a2565b935060208501359250604085013567ffffffffffffffff81111561177557600080fd5b6117818782880161167b565b95989497509550505050565b600080604083850312156117a057600080fd5b6117a9836115a2565b91506117b7602084016115a2565b90509250929050565b600181811c908216806117d457607f821691505b602082108114156104ae57634e487b7160e01b600052602260045260246000fd5b60006001600160a01b038087168352808616602084015250836040830152608060608301526118276080830184611529565b9695505050505050565b60006020828403121561184357600080fd5b8151610a9a816114de565b634e487b7160e01b600052601160045260246000fd5b6000828210156118765761187661184e565b500390565b6000821982111561188e5761188e61184e565b50019056fea26469706673582212209bb6e5ee7ec47dd34898283c3f9eacfd9f6a37f234e157f07763b9465a062f0b64736f6c63430008090033";

type NFTokenMetadataTestMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTokenMetadataTestMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTokenMetadataTestMock__factory extends ContractFactory {
  constructor(...args: NFTokenMetadataTestMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTokenMetadataTestMock> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<NFTokenMetadataTestMock>;
  }
  override getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): NFTokenMetadataTestMock {
    return super.attach(address) as NFTokenMetadataTestMock;
  }
  override connect(signer: Signer): NFTokenMetadataTestMock__factory {
    return super.connect(signer) as NFTokenMetadataTestMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTokenMetadataTestMockInterface {
    return new utils.Interface(_abi) as NFTokenMetadataTestMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTokenMetadataTestMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTokenMetadataTestMock;
  }
}
