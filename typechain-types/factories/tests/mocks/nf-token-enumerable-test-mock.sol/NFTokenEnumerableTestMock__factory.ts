/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  NFTokenEnumerableTestMock,
  NFTokenEnumerableTestMockInterface,
} from "../../../../tests/mocks/nf-token-enumerable-test-mock.sol/NFTokenEnumerableTestMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_CURRENT_OWNER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "idToIndexWrapper",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "idToOwnerIndexWrapper",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "ownerToIdbyIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "ownerToIdsLen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600060208190527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff1990811660019081179092557ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed780800805482168317905563780e9d6360e01b9092527f77b7bbe0e49b76487c9476b5db3354cf5270619d0037ccb899c2a4c4a75b43188054909216179055600980546001600160a01b03191633179055611912806100c76000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80636352211e116100e3578063b88d4fde1161008c578063e985e9c511610066578063e985e9c51461032c578063f2fde38b1461033f578063f3fe3bc3146103525761018d565b8063b88d4fde146102f3578063bd91a79d14610306578063caedf92a146103195761018d565b8063860d248a116100bd578063860d248a146102c35780638da5cb5b146102d8578063a22cb465146102e05761018d565b80636352211e1461028a578063688d189d1461029d57806370a08231146102b05761018d565b806323b872dd1161014557806342842e0e1161011f57806342842e0e1461025157806342966c68146102645780634f6ccce7146102775761018d565b806323b872dd146102185780632f745c591461022b57806340c10f191461023e5761018d565b8063095ea7b311610176578063095ea7b3146101db57806318160ddd146101f057806322b2e7ab146102055761018d565b806301ffc9a714610192578063081812fc146101bb575b600080fd5b6101a56101a0366004611779565b61035a565b6040516101b29190611864565b60405180910390f35b6101ce6101c93660046117b1565b610395565b6040516101b29190611814565b6101ee6101e9366004611750565b610417565b005b6101f86105e7565b6040516101b29190611882565b6101f86102133660046115f2565b6105ed565b6101ee610226366004611645565b610608565b6101f8610239366004611750565b6107c3565b6101ee61024c366004611750565b610868565b6101ee61025f366004611645565b6108c0565b6101ee6102723660046117b1565b6108e0565b6101f86102853660046117b1565b610936565b6101ce6102983660046117b1565b6109ac565b6101f86102ab366004611750565b610a04565b6101f86102be3660046115f2565b610a3c565b6102cb610a93565b6040516101b2919061186f565b6101ce610ab5565b6101ee6102ee366004611716565b610ac4565b6101ee610301366004611680565b610b33565b6101f86103143660046117b1565b610b7c565b6101f86103273660046117b1565b610b8e565b6101a561033a366004611613565b610ba0565b6101ee61034d3660046115f2565b610bce565b6102cb610cb9565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b03166103f55760405162461bcd60e51b81526004016103ec919061186f565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b03163381148061046257506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020017f3030333030330000000000000000000000000000000000000000000000000000815250906104b65760405162461bcd60e51b81526004016103ec919061186f565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166105105760405162461bcd60e51b81526004016103ec919061186f565b50600084815260016020908152604091829020548251808401909352600683527f3030333030380000000000000000000000000000000000000000000000000000918301919091526001600160a01b03908116919087168214156105875760405162461bcd60e51b81526004016103ec919061186f565b5060008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60055490565b6001600160a01b031660009081526007602052604090205490565b60008181526001602052604090205481906001600160a01b03163381148061064657506000828152600260205260409020546001600160a01b031633145b8061067457506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b815250906106b15760405162461bcd60e51b81526004016103ec919061186f565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b031661070b5760405162461bcd60e51b81526004016103ec919061186f565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b0390811691908816821461076a5760405162461bcd60e51b81526004016103ec919061186f565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b0387166107af5760405162461bcd60e51b81526004016103ec919061186f565b506107ba8686610cdb565b50505050505050565b6001600160a01b0382166000908152600760209081526040808320548151808301909252600682526530303530303760d01b9282019290925290831061081c5760405162461bcd60e51b81526004016103ec919061186f565b506001600160a01b038316600090815260076020526040902080548390811061085557634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b60095460408051808201909152600681526530313830303160d01b6020820152906001600160a01b031633146108b15760405162461bcd60e51b81526004016103ec919061186f565b506108bc8282610d56565b5050565b6108db83838360405180602001604052806000815250610db6565b505050565b60095460408051808201909152600681526530313830303160d01b6020820152906001600160a01b031633146109295760405162461bcd60e51b81526004016103ec919061186f565b5061093381611093565b50565b60055460408051808201909152600681526530303530303760d01b602082015260009183106109785760405162461bcd60e51b81526004016103ec919061186f565b506005828154811061099a57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b031690816104115760405162461bcd60e51b81526004016103ec919061186f565b6001600160a01b038216600090815260076020526040812080548390811061085557634e487b7160e01b600052603260045260246000fd5b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b038316610a835760405162461bcd60e51b81526004016103ec919061186f565b50610a8d826105ed565b92915050565b6040518060400160405280600681526020016518189c18181960d11b81525081565b6009546001600160a01b031681565b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610b27908590611864565b60405180910390a35050565b610b7585858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610db692505050565b5050505050565b60009081526006602052604090205490565b60009081526008602052604090205490565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b60095460408051808201909152600681526530313830303160d01b6020820152906001600160a01b03163314610c175760405162461bcd60e51b81526004016103ec919061186f565b5060408051808201909152600681526518189c18181960d11b60208201526001600160a01b038216610c5c5760405162461bcd60e51b81526004016103ec919061186f565b506009546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600980546001600160a01b0319166001600160a01b0392909216919091179055565b6040518060400160405280600681526020016530313830303160d01b81525081565b6000818152600160205260409020546001600160a01b0316610cfc82611171565b610d06818361118f565b610d108383611336565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b610d6082826113fa565b600580546001818101835560008390527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09091018390559054610da3919061188b565b6000918252600660205260409091205550565b60008281526001602052604090205482906001600160a01b031633811480610df457506000828152600260205260409020546001600160a01b031633145b80610e2257506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b81525090610e5f5760405162461bcd60e51b81526004016103ec919061186f565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b0316610eb95760405162461bcd60e51b81526004016103ec919061186f565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03908116919089168214610f185760405162461bcd60e51b81526004016103ec919061186f565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b038816610f5d5760405162461bcd60e51b81526004016103ec919061186f565b50610f688787610cdb565b610f7a876001600160a01b03166114dd565b1561108957604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a0290610fb49033908d908c908c90600401611828565b602060405180830381600087803b158015610fce57600080fd5b505af1158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110069190611795565b60408051808201909152600681527f303033303035000000000000000000000000000000000000000000000000000060208201529091507fffffffff000000000000000000000000000000000000000000000000000000008216630a85bd0160e11b146110865760405162461bcd60e51b81526004016103ec919061186f565b50505b5050505050505050565b61109c81611519565b6000818152600660205260408120546005549091906110bd9060019061188b565b90506000600582815481106110e257634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050806005848154811061111157634e487b7160e01b600052603260045260246000fd5b600091825260209091200155600580548061113c57634e487b7160e01b600052603160045260246000fd5b600082815260208082208301600019908101839055909201909255918152600690915260408082209390935592835250812055565b600090815260026020526040902080546001600160a01b0319169055565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b038481169116146111ea5760405162461bcd60e51b81526004016103ec919061186f565b50600081815260016020818152604080842080546001600160a01b031916905560088252808420546001600160a01b038716855260079092528320549092916112329161188b565b90508181146112e5576001600160a01b038416600090815260076020526040812080548390811061127357634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060076000876001600160a01b03166001600160a01b0316815260200190815260200160002084815481106112c557634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925591825260089052604090208290555b6001600160a01b038416600090815260076020526040902080548061131a57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b03161561138d5760405162461bcd60e51b81526004016103ec919061186f565b50600081815260016020818152604080842080546001600160a01b0319166001600160a01b038816908117909155808552600783529084208054808501825581865292852090920185905590925290546113e7919061188b565b6000918252600860205260409091205550565b60408051808201909152600681526530303330303160d01b60208201526001600160a01b03831661143e5760405162461bcd60e51b81526004016103ec919061186f565b50600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156114965760405162461bcd60e51b81526004016103ec919061186f565b506114a18282611336565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906115115750808214155b949350505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528291906001600160a01b03166115725760405162461bcd60e51b81526004016103ec919061186f565b506000828152600160205260409020546001600160a01b031661159483611171565b61159e818461118f565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b80356001600160a01b038116811461039057600080fd5b600060208284031215611603578081fd5b61160c826115db565b9392505050565b60008060408385031215611625578081fd5b61162e836115db565b915061163c602084016115db565b90509250929050565b600080600060608486031215611659578081fd5b611662846115db565b9250611670602085016115db565b9150604084013590509250925092565b600080600080600060808688031215611697578081fd5b6116a0866115db565b94506116ae602087016115db565b935060408601359250606086013567ffffffffffffffff808211156116d1578283fd5b818801915088601f8301126116e4578283fd5b8135818111156116f2578384fd5b896020828501011115611703578384fd5b9699959850939650602001949392505050565b60008060408385031215611728578182fd5b611731836115db565b915060208301358015158114611745578182fd5b809150509250929050565b60008060408385031215611762578182fd5b61176b836115db565b946020939093013593505050565b60006020828403121561178a578081fd5b813561160c816118ae565b6000602082840312156117a6578081fd5b815161160c816118ae565b6000602082840312156117c2578081fd5b5035919050565b60008151808452815b818110156117ee576020818501810151868301820152016117d2565b818111156117ff5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261185a60808301846117c9565b9695505050505050565b901515815260200190565b60006020825261160c60208301846117c9565b90815260200190565b6000828210156118a957634e487b7160e01b81526011600452602481fd5b500390565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461093357600080fdfea2646970667358221220b840dc2b0bcc9e98dfa3bdc343a3a8b304519c30b4efbd1574e96ed48eaaef9f64736f6c63430008000033";

type NFTokenEnumerableTestMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTokenEnumerableTestMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTokenEnumerableTestMock__factory extends ContractFactory {
  constructor(...args: NFTokenEnumerableTestMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTokenEnumerableTestMock> {
    return super.deploy(overrides || {}) as Promise<NFTokenEnumerableTestMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTokenEnumerableTestMock {
    return super.attach(address) as NFTokenEnumerableTestMock;
  }
  override connect(signer: Signer): NFTokenEnumerableTestMock__factory {
    return super.connect(signer) as NFTokenEnumerableTestMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTokenEnumerableTestMockInterface {
    return new utils.Interface(_abi) as NFTokenEnumerableTestMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTokenEnumerableTestMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTokenEnumerableTestMock;
  }
}
