/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC520Token,
  ERC520TokenInterface,
} from "../../../../contracts/tokens/erc520-token.sol/ERC520Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenIdA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenIdB",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_a",
        type: "address",
      },
      {
        internalType: "address",
        name: "_b",
        type: "address",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_a",
        type: "address",
      },
    ],
    name: "getPairInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "partner",
            type: "address",
          },
          {
            internalType: "enum ERC520.Sex",
            name: "sex",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ERC520.AddressInfo",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "partner",
            type: "address",
          },
          {
            internalType: "enum ERC520.Sex",
            name: "sex",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ERC520.AddressInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600060208190527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff1990811660019081179092557ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed780800805482168317905563780e9d6360e01b9092527f77b7bbe0e49b76487c9476b5db3354cf5270619d0037ccb899c2a4c4a75b43188054909216179055611627806100b56000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80636352211e116100b2578063b3154db011610081578063c87b56dd11610066578063c87b56dd146102af578063d4ff73f7146102c2578063e985e9c5146102e357600080fd5b8063b3154db014610289578063b88d4fde1461029c57600080fd5b80636352211e1461024857806370a082311461025b57806395d89b411461026e578063a22cb4651461027657600080fd5b806318160ddd116101095780632f745c59116100ee5780632f745c591461020f57806342842e0e146102225780634f6ccce71461023557600080fd5b806318160ddd146101ea57806323b872dd146101fc57600080fd5b806301ffc9a71461013b57806306fdde0314610195578063081812fc146101aa578063095ea7b3146101d5575b600080fd5b61018061014936600461128d565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b61019d61031f565b60405161018c91906112fe565b6101bd6101b8366004611311565b6103b1565b6040516001600160a01b03909116815260200161018c565b6101e86101e3366004611346565b610433565b005b6005545b60405190815260200161018c565b6101e861020a366004611370565b61061b565b6101ee61021d366004611346565b6107d6565b6101e8610230366004611370565b61086d565b6101ee610243366004611311565b61088d565b6101bd610256366004611311565b6108f5565b6101ee6102693660046113ac565b61094d565b61019d6109b1565b6101e86102843660046113c7565b6109c0565b610180610297366004611403565b610a2c565b6101e86102aa366004611436565b610c26565b61019d6102bd366004611311565b610c6f565b6102d56102d03660046113ac565b610ce1565b60405161018c929190611531565b6101806102f1366004611403565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6060600a805461032e9061154d565b80601f016020809104026020016040519081016040528092919081815260200182805461035a9061154d565b80156103a75780601f1061037c576101008083540402835291602001916103a7565b820191906000526020600020905b81548152906001019060200180831161038a57829003601f168201915b5050505050905090565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b03166104115760405162461bcd60e51b815260040161040891906112fe565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b03163381148061047e57506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020017f3030333030330000000000000000000000000000000000000000000000000000815250906104d25760405162461bcd60e51b815260040161040891906112fe565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b031661052c5760405162461bcd60e51b815260040161040891906112fe565b50600084815260016020908152604091829020548251808401909352600683527f3030333030380000000000000000000000000000000000000000000000000000918301919091526001600160a01b03908116919087168214156105a35760405162461bcd60e51b815260040161040891906112fe565b5060008581526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60008181526001602052604090205481906001600160a01b03163381148061065957506000828152600260205260409020546001600160a01b031633145b8061068757506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b815250906106c45760405162461bcd60e51b815260040161040891906112fe565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b031661071e5760405162461bcd60e51b815260040161040891906112fe565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b0390811691908816821461077d5760405162461bcd60e51b815260040161040891906112fe565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b0387166107c25760405162461bcd60e51b815260040161040891906112fe565b506107cd8686610efb565b50505050505050565b6001600160a01b0382166000908152600760209081526040808320548151808301909252600682526530303530303760d01b9282019290925290831061082f5760405162461bcd60e51b815260040161040891906112fe565b506001600160a01b038316600090815260076020526040902080548390811061085a5761085a611582565b9060005260206000200154905092915050565b61088883838360405180602001604052806000815250610f43565b505050565b60055460408051808201909152600681526530303530303760d01b602082015260009183106108cf5760405162461bcd60e51b815260040161040891906112fe565b50600582815481106108e3576108e3611582565b90600052602060002001549050919050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b0316908161042d5760405162461bcd60e51b815260040161040891906112fe565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b0383166109945760405162461bcd60e51b815260040161040891906112fe565b50506001600160a01b031660009081526007602052604090205490565b6060600b805461032e9061154d565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b03828116600090815260096020908152604080832081516080810190925280549485168252929384939192830190600160a01b900460ff166002811115610a7c57610a7c6114d1565b6002811115610a8d57610a8d6114d1565b815260200160018201548152602001600282015481525050905060006001600160a01b031681600001516001600160a01b031614156040518060400160405280600e81526020016d3737ba103b30b634b2103830b4b960911b81525090610b075760405162461bcd60e51b815260040161040891906112fe565b506001600160a01b038381166000908152600960209081526040808320815160808101909252805494851682529293909291830190600160a01b900460ff166002811115610b5757610b576114d1565b6002811115610b6857610b686114d1565b815260200160018201548152602001600282015481525050905060006001600160a01b031681600001516001600160a01b031614156040518060400160405280600e81526020016d3737ba103b30b634b2103830b4b960911b81525090610be25760405162461bcd60e51b815260040161040891906112fe565b50836001600160a01b031682600001516001600160a01b0316148015610c1d5750846001600160a01b031681600001516001600160a01b0316145b95945050505050565b610c6885858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610f4392505050565b5050505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b9183019190915260609183916001600160a01b0316610cca5760405162461bcd60e51b815260040161040891906112fe565b505060408051602081019091526000815292915050565b610d0d604080516080810190915260008082526020820190815260200160008152602001600081525090565b610d39604080516080810190915260008082526020820190815260200160008152602001600081525090565b6001600160a01b038381166000908152600960209081526040808320815160808101909252805494851682529293909291830190600160a01b900460ff166002811115610d8857610d886114d1565b6002811115610d9957610d996114d1565b815260200160018201548152602001600282015481525050905060006001600160a01b031681600001516001600160a01b031614156040518060400160405280600e81526020016d3737ba103b30b634b2103830b4b960911b81525090610e135760405162461bcd60e51b815260040161040891906112fe565b5080516001600160a01b039081166000908152600960209081526040808320815160808101909252805494851682529293909291830190600160a01b900460ff166002811115610e6557610e656114d1565b6002811115610e7657610e766114d1565b815260200160018201548152602001600282015481525050905060006001600160a01b031681600001516001600160a01b031614156040518060400160405280600e81526020016d3737ba103b30b634b2103830b4b960911b81525090610ef05760405162461bcd60e51b815260040161040891906112fe565b509094909350915050565b60405162461bcd60e51b815260206004820152600e60248201527f63616e6f74207472616e736665720000000000000000000000000000000000006044820152606401610408565b60008281526001602052604090205482906001600160a01b031633811480610f8157506000828152600260205260409020546001600160a01b031633145b80610faf57506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b81525090610fec5760405162461bcd60e51b815260040161040891906112fe565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b03166110465760405162461bcd60e51b815260040161040891906112fe565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190891682146110a55760405162461bcd60e51b815260040161040891906112fe565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b0388166110ea5760405162461bcd60e51b815260040161040891906112fe565b506110f58787610efb565b611107876001600160a01b0316611220565b1561121657604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a02906111419033908d908c908c90600401611598565b602060405180830381600087803b15801561115b57600080fd5b505af115801561116f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119391906115d4565b60408051808201909152600681527f303033303035000000000000000000000000000000000000000000000000000060208201529091507fffffffff000000000000000000000000000000000000000000000000000000008216630a85bd0160e11b146112135760405162461bcd60e51b815260040161040891906112fe565b50505b5050505050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906112545750808214155b949350505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461128a57600080fd5b50565b60006020828403121561129f57600080fd5b81356112aa8161125c565b9392505050565b6000815180845260005b818110156112d7576020818501810151868301820152016112bb565b818111156112e9576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006112aa60208301846112b1565b60006020828403121561132357600080fd5b5035919050565b80356001600160a01b038116811461134157600080fd5b919050565b6000806040838503121561135957600080fd5b6113628361132a565b946020939093013593505050565b60008060006060848603121561138557600080fd5b61138e8461132a565b925061139c6020850161132a565b9150604084013590509250925092565b6000602082840312156113be57600080fd5b6112aa8261132a565b600080604083850312156113da57600080fd5b6113e38361132a565b9150602083013580151581146113f857600080fd5b809150509250929050565b6000806040838503121561141657600080fd5b61141f8361132a565b915061142d6020840161132a565b90509250929050565b60008060008060006080868803121561144e57600080fd5b6114578661132a565b94506114656020870161132a565b935060408601359250606086013567ffffffffffffffff8082111561148957600080fd5b818801915088601f83011261149d57600080fd5b8135818111156114ac57600080fd5b8960208285010111156114be57600080fd5b9699959850939650602001949392505050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03815116825260208101516003811061151757634e487b7160e01b600052602160045260246000fd5b602083015260408181015190830152606090810151910152565b610100810161154082856114e7565b6112aa60808301846114e7565b600181811c9082168061156157607f821691505b6020821081141561042d57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b038087168352808616602084015250836040830152608060608301526115ca60808301846112b1565b9695505050505050565b6000602082840312156115e657600080fd5b81516112aa8161125c56fea26469706673582212205f18e04749df6d12b47c5d47ac83f7593e715b1a9993f227460503abac944fb364736f6c63430008090033";

type ERC520TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC520TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC520Token__factory extends ContractFactory {
  constructor(...args: ERC520TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC520Token> {
    return super.deploy(overrides || {}) as Promise<ERC520Token>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC520Token {
    return super.attach(address) as ERC520Token;
  }
  override connect(signer: Signer): ERC520Token__factory {
    return super.connect(signer) as ERC520Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC520TokenInterface {
    return new utils.Interface(_abi) as ERC520TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC520Token {
    return new Contract(address, _abi, signerOrProvider) as ERC520Token;
  }
}
