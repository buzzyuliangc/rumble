/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  NFTokenMetadataMock,
  NFTokenMetadataMockInterface,
} from "../../../../contracts/mocks/nf-token-metadata-mock.sol/NFTokenMetadataMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_CURRENT_OWNER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bf938038062001bf9833981016040819052620000349162000260565b600060208181527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff1990811660019081179092557ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed7808008054821683179055635b5e139f60e01b9093527f9562381dfbc2d8b8b66e765249f330164b73e329e5f01670660643571d1974df805490931617909155600880546001600160a01b031916331790558251620000f091600591908501906200010f565b508051620001069060069060208401906200010f565b5050506200031a565b8280546200011d90620002c7565b90600052602060002090601f0160209004810192826200014157600085556200018c565b82601f106200015c57805160ff19168380011785556200018c565b828001600101855582156200018c579182015b828111156200018c5782518255916020019190600101906200016f565b506200019a9291506200019e565b5090565b5b808211156200019a57600081556001016200019f565b600082601f830112620001c6578081fd5b81516001600160401b0380821115620001e357620001e362000304565b6040516020601f8401601f19168201810183811183821017156200020b576200020b62000304565b604052838252858401810187101562000222578485fd5b8492505b8383101562000245578583018101518284018201529182019162000226565b838311156200025657848185840101525b5095945050505050565b6000806040838503121562000273578182fd5b82516001600160401b03808211156200028a578384fd5b6200029886838701620001b5565b93506020850151915080821115620002ae578283fd5b50620002bd85828601620001b5565b9150509250929050565b600281046001821680620002dc57607f821691505b60208210811415620002fe57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6118cf806200032a6000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063860d248a116100cd578063c87b56dd11610081578063e985e9c511610066578063e985e9c514610299578063f2fde38b146102ac578063f3fe3bc3146102bf57610151565b8063c87b56dd14610273578063d3fc98641461028657610151565b806395d89b41116100b257806395d89b4114610245578063a22cb4651461024d578063b88d4fde1461026057610151565b8063860d248a146102355780638da5cb5b1461023d57610151565b806323b872dd1161012457806342966c681161010957806342966c68146101ef5780636352211e1461020257806370a082311461021557610151565b806323b872dd146101c957806342842e0e146101dc57610151565b806301ffc9a71461015657806306fdde031461017f578063081812fc14610194578063095ea7b3146101b4575b600080fd5b6101696101643660046116df565b6102c7565b60405161017691906117ca565b60405180910390f35b610187610302565b60405161017691906117d5565b6101a76101a2366004611717565b610394565b604051610176919061177a565b6101c76101c236600461165e565b610416565b005b6101c76101d736600461157c565b6105e6565b6101c76101ea36600461157c565b6107a1565b6101c76101fd366004611717565b6107c1565b6101a7610210366004611717565b610817565b610228610223366004611530565b61086f565b60405161017691906117e8565b6101876108c6565b6101a76108e8565b6101876108f7565b6101c761025b366004611624565b610906565b6101c761026e3660046115b7565b610975565b610187610281366004611717565b6109be565b6101c7610294366004611687565b610a2a565b6101696102a736600461154a565b610ac4565b6101c76102ba366004611530565b610af2565b610187610bdd565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b60606005805461031190611820565b80601f016020809104026020016040519081016040528092919081815260200182805461033d90611820565b801561038a5780601f1061035f5761010080835404028352916020019161038a565b820191906000526020600020905b81548152906001019060200180831161036d57829003601f168201915b5050505050905090565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b03166103f45760405162461bcd60e51b81526004016103eb91906117d5565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b03163381148061046157506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020017f3030333030330000000000000000000000000000000000000000000000000000815250906104b55760405162461bcd60e51b81526004016103eb91906117d5565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b031661050f5760405162461bcd60e51b81526004016103eb91906117d5565b50600084815260016020908152604091829020548251808401909352600683527f3030333030380000000000000000000000000000000000000000000000000000918301919091526001600160a01b03908116919087168214156105865760405162461bcd60e51b81526004016103eb91906117d5565b5060008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60008181526001602052604090205481906001600160a01b03163381148061062457506000828152600260205260409020546001600160a01b031633145b8061065257506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b8152509061068f5760405162461bcd60e51b81526004016103eb91906117d5565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166106e95760405162461bcd60e51b81526004016103eb91906117d5565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190881682146107485760405162461bcd60e51b81526004016103eb91906117d5565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b03871661078d5760405162461bcd60e51b81526004016103eb91906117d5565b506107988686610bff565b50505050505050565b6107bc83838360405180602001604052806000815250610c7a565b505050565b60085460408051808201909152600681526530313830303160d01b6020820152906001600160a01b0316331461080a5760405162461bcd60e51b81526004016103eb91906117d5565b5061081481610f57565b50565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b031690816104105760405162461bcd60e51b81526004016103eb91906117d5565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b0383166108b65760405162461bcd60e51b81526004016103eb91906117d5565b506108c082610f77565b92915050565b6040518060400160405280600681526020016518189c18181960d11b81525081565b6008546001600160a01b031681565b60606006805461031190611820565b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31906109699085906117ca565b60405180910390a35050565b6109b785858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c7a92505050565b5050505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b9183019190915260609183916001600160a01b0316610a195760405162461bcd60e51b81526004016103eb91906117d5565b50610a2383610f92565b9392505050565b60085460408051808201909152600681526530313830303160d01b6020820152906001600160a01b03163314610a735760405162461bcd60e51b81526004016103eb91906117d5565b50610a7e8484611034565b610abe8383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061111792505050565b50505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b60085460408051808201909152600681526530313830303160d01b6020820152906001600160a01b03163314610b3b5760405162461bcd60e51b81526004016103eb91906117d5565b5060408051808201909152600681526518189c18181960d11b60208201526001600160a01b038216610b805760405162461bcd60e51b81526004016103eb91906117d5565b506008546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600880546001600160a01b0319166001600160a01b0392909216919091179055565b6040518060400160405280600681526020016530313830303160d01b81525081565b6000818152600160205260409020546001600160a01b0316610c2082611190565b610c2a81836111ae565b610c348383611257565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008281526001602052604090205482906001600160a01b031633811480610cb857506000828152600260205260409020546001600160a01b031633145b80610ce657506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b81525090610d235760405162461bcd60e51b81526004016103eb91906117d5565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b0316610d7d5760405162461bcd60e51b81526004016103eb91906117d5565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03908116919089168214610ddc5760405162461bcd60e51b81526004016103eb91906117d5565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b038816610e215760405162461bcd60e51b81526004016103eb91906117d5565b50610e2c8787610bff565b610e3e876001600160a01b03166112ff565b15610f4d57604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a0290610e789033908d908c908c9060040161178e565b602060405180830381600087803b158015610e9257600080fd5b505af1158015610ea6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eca91906116fb565b60408051808201909152600681527f303033303035000000000000000000000000000000000000000000000000000060208201529091507fffffffff000000000000000000000000000000000000000000000000000000008216630a85bd0160e11b14610f4a5760405162461bcd60e51b81526004016103eb91906117d5565b50505b5050505050505050565b610f608161133b565b6000818152600760205260408120610814916113fd565b6001600160a01b031660009081526003602052604090205490565b6000818152600760205260409020805460609190610faf90611820565b80601f0160208091040260200160405190810160405280929190818152602001828054610fdb90611820565b80156110285780601f10610ffd57610100808354040283529160200191611028565b820191906000526020600020905b81548152906001019060200180831161100b57829003601f168201915b50505050509050919050565b60408051808201909152600681526530303330303160d01b60208201526001600160a01b0383166110785760405162461bcd60e51b81526004016103eb91906117d5565b50600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156110d05760405162461bcd60e51b81526004016103eb91906117d5565b506110db8282611257565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600082815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528391906001600160a01b03166111705760405162461bcd60e51b81526004016103eb91906117d5565b5060008381526007602090815260409091208351610abe92850190611439565b600090815260026020526040902080546001600160a01b0319169055565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b038481169116146112095760405162461bcd60e51b81526004016103eb91906117d5565b506001600160a01b0382166000908152600360205260408120805460019290611233908490611809565b9091555050600090815260016020526040902080546001600160a01b031916905550565b600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156112ae5760405162461bcd60e51b81526004016103eb91906117d5565b50600081815260016020818152604080842080546001600160a01b0319166001600160a01b0388169081179091558452600390915282208054919290916112f69084906117f1565b90915550505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906113335750808214155b949350505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528291906001600160a01b03166113945760405162461bcd60e51b81526004016103eb91906117d5565b506000828152600160205260409020546001600160a01b03166113b683611190565b6113c081846111ae565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b50805461140990611820565b6000825580601f1061141b5750610814565b601f01602090049060005260206000209081019061081491906114bd565b82805461144590611820565b90600052602060002090601f01602090048101928261146757600085556114ad565b82601f1061148057805160ff19168380011785556114ad565b828001600101855582156114ad579182015b828111156114ad578251825591602001919060010190611492565b506114b99291506114bd565b5090565b5b808211156114b957600081556001016114be565b80356001600160a01b03811681146102fd57600080fd5b60008083601f8401126114fa578182fd5b50813567ffffffffffffffff811115611511578182fd5b60208301915083602082850101111561152957600080fd5b9250929050565b600060208284031215611541578081fd5b610a23826114d2565b6000806040838503121561155c578081fd5b611565836114d2565b9150611573602084016114d2565b90509250929050565b600080600060608486031215611590578081fd5b611599846114d2565b92506115a7602085016114d2565b9150604084013590509250925092565b6000806000806000608086880312156115ce578081fd5b6115d7866114d2565b94506115e5602087016114d2565b935060408601359250606086013567ffffffffffffffff811115611607578182fd5b611613888289016114e9565b969995985093965092949392505050565b60008060408385031215611636578182fd5b61163f836114d2565b915060208301358015158114611653578182fd5b809150509250929050565b60008060408385031215611670578182fd5b611679836114d2565b946020939093013593505050565b6000806000806060858703121561169c578384fd5b6116a5856114d2565b935060208501359250604085013567ffffffffffffffff8111156116c7578283fd5b6116d3878288016114e9565b95989497509550505050565b6000602082840312156116f0578081fd5b8135610a238161186b565b60006020828403121561170c578081fd5b8151610a238161186b565b600060208284031215611728578081fd5b5035919050565b60008151808452815b8181101561175457602081850181015186830182015201611738565b818111156117655782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60006001600160a01b038087168352808616602084015250836040830152608060608301526117c0608083018461172f565b9695505050505050565b901515815260200190565b600060208252610a23602083018461172f565b90815260200190565b6000821982111561180457611804611855565b500190565b60008282101561181b5761181b611855565b500390565b60028104600182168061183457607f821691505b6020821081141561041057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b7fffffffff000000000000000000000000000000000000000000000000000000008116811461081457600080fdfea264697066735822122033715f8db512f9ada1c9279d0598417fc5261a4c40a79a0827d1c5d02d664f4664736f6c63430008000033";

type NFTokenMetadataMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTokenMetadataMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTokenMetadataMock__factory extends ContractFactory {
  constructor(...args: NFTokenMetadataMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTokenMetadataMock> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<NFTokenMetadataMock>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): NFTokenMetadataMock {
    return super.attach(address) as NFTokenMetadataMock;
  }
  override connect(signer: Signer): NFTokenMetadataMock__factory {
    return super.connect(signer) as NFTokenMetadataMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTokenMetadataMockInterface {
    return new utils.Interface(_abi) as NFTokenMetadataMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTokenMetadataMock {
    return new Contract(address, _abi, signerOrProvider) as NFTokenMetadataMock;
  }
}
