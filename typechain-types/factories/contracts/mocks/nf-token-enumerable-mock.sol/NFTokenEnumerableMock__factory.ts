/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  NFTokenEnumerableMock,
  NFTokenEnumerableMockInterface,
} from "../../../../contracts/mocks/nf-token-enumerable-mock.sol/NFTokenEnumerableMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_CURRENT_OWNER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600060208190527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff1990811660019081179092557ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed780800805482168317905563780e9d6360e01b9092527f77b7bbe0e49b76487c9476b5db3354cf5270619d0037ccb899c2a4c4a75b43188054909216179055600980546001600160a01b0319163317905561182e806100c76000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80634f6ccce7116100cd578063a22cb46511610081578063e985e9c511610066578063e985e9c5146102a4578063f2fde38b146102b7578063f3fe3bc3146102ca57610151565b8063a22cb4651461027e578063b88d4fde1461029157610151565b806370a08231116100b257806370a082311461024e578063860d248a146102615780638da5cb5b1461027657610151565b80634f6ccce7146102285780636352211e1461023b57610151565b806323b872dd1161012457806340c10f191161010957806340c10f19146101ef57806342842e0e1461020257806342966c681461021557610151565b806323b872dd146101c95780632f745c59146101dc57610151565b806301ffc9a714610156578063081812fc1461017f578063095ea7b31461019f57806318160ddd146101b4575b600080fd5b610169610164366004611695565b6102d2565b6040516101769190611780565b60405180910390f35b61019261018d3660046116cd565b61030d565b6040516101769190611730565b6101b26101ad36600461166c565b61038f565b005b6101bc61055f565b604051610176919061179e565b6101b26101d7366004611561565b610565565b6101bc6101ea36600461166c565b610720565b6101b26101fd36600461166c565b6107c5565b6101b2610210366004611561565b61081d565b6101b26102233660046116cd565b61083d565b6101bc6102363660046116cd565b610893565b6101926102493660046116cd565b610909565b6101bc61025c36600461150e565b610961565b6102696109b8565b604051610176919061178b565b6101926109da565b6101b261028c366004611632565b6109e9565b6101b261029f36600461159c565b610a58565b6101696102b236600461152f565b610aa1565b6101b26102c536600461150e565b610acf565b610269610bba565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b031661036d5760405162461bcd60e51b8152600401610364919061178b565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b0316338114806103da57506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020017f30303330303300000000000000000000000000000000000000000000000000008152509061042e5760405162461bcd60e51b8152600401610364919061178b565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166104885760405162461bcd60e51b8152600401610364919061178b565b50600084815260016020908152604091829020548251808401909352600683527f3030333030380000000000000000000000000000000000000000000000000000918301919091526001600160a01b03908116919087168214156104ff5760405162461bcd60e51b8152600401610364919061178b565b5060008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60055490565b60008181526001602052604090205481906001600160a01b0316338114806105a357506000828152600260205260409020546001600160a01b031633145b806105d157506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b8152509061060e5760405162461bcd60e51b8152600401610364919061178b565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166106685760405162461bcd60e51b8152600401610364919061178b565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190881682146106c75760405162461bcd60e51b8152600401610364919061178b565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b03871661070c5760405162461bcd60e51b8152600401610364919061178b565b506107178686610bdc565b50505050505050565b6001600160a01b0382166000908152600760209081526040808320548151808301909252600682526530303530303760d01b928201929092529083106107795760405162461bcd60e51b8152600401610364919061178b565b506001600160a01b03831660009081526007602052604090208054839081106107b257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b60095460408051808201909152600681526530313830303160d01b6020820152906001600160a01b0316331461080e5760405162461bcd60e51b8152600401610364919061178b565b506108198282610c57565b5050565b61083883838360405180602001604052806000815250610cb7565b505050565b60095460408051808201909152600681526530313830303160d01b6020820152906001600160a01b031633146108865760405162461bcd60e51b8152600401610364919061178b565b5061089081610f94565b50565b60055460408051808201909152600681526530303530303760d01b602082015260009183106108d55760405162461bcd60e51b8152600401610364919061178b565b50600582815481106108f757634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b031690816103895760405162461bcd60e51b8152600401610364919061178b565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b0383166109a85760405162461bcd60e51b8152600401610364919061178b565b506109b282611072565b92915050565b6040518060400160405280600681526020016518189c18181960d11b81525081565b6009546001600160a01b031681565b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610a4c908590611780565b60405180910390a35050565b610a9a85858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cb792505050565b5050505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b60095460408051808201909152600681526530313830303160d01b6020820152906001600160a01b03163314610b185760405162461bcd60e51b8152600401610364919061178b565b5060408051808201909152600681526518189c18181960d11b60208201526001600160a01b038216610b5d5760405162461bcd60e51b8152600401610364919061178b565b506009546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600980546001600160a01b0319166001600160a01b0392909216919091179055565b6040518060400160405280600681526020016530313830303160d01b81525081565b6000818152600160205260409020546001600160a01b0316610bfd8261108d565b610c0781836110ab565b610c118383611252565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b610c618282611316565b600580546001818101835560008390527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09091018390559054610ca491906117a7565b6000918252600660205260409091205550565b60008281526001602052604090205482906001600160a01b031633811480610cf557506000828152600260205260409020546001600160a01b031633145b80610d2357506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b81525090610d605760405162461bcd60e51b8152600401610364919061178b565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b0316610dba5760405162461bcd60e51b8152600401610364919061178b565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03908116919089168214610e195760405162461bcd60e51b8152600401610364919061178b565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b038816610e5e5760405162461bcd60e51b8152600401610364919061178b565b50610e698787610bdc565b610e7b876001600160a01b03166113f9565b15610f8a57604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a0290610eb59033908d908c908c90600401611744565b602060405180830381600087803b158015610ecf57600080fd5b505af1158015610ee3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0791906116b1565b60408051808201909152600681527f303033303035000000000000000000000000000000000000000000000000000060208201529091507fffffffff000000000000000000000000000000000000000000000000000000008216630a85bd0160e11b14610f875760405162461bcd60e51b8152600401610364919061178b565b50505b5050505050505050565b610f9d81611435565b600081815260066020526040812054600554909190610fbe906001906117a7565b9050600060058281548110610fe357634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050806005848154811061101257634e487b7160e01b600052603260045260246000fd5b600091825260209091200155600580548061103d57634e487b7160e01b600052603160045260246000fd5b600082815260208082208301600019908101839055909201909255918152600690915260408082209390935592835250812055565b6001600160a01b031660009081526007602052604090205490565b600090815260026020526040902080546001600160a01b0319169055565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b038481169116146111065760405162461bcd60e51b8152600401610364919061178b565b50600081815260016020818152604080842080546001600160a01b031916905560088252808420546001600160a01b0387168552600790925283205490929161114e916117a7565b9050818114611201576001600160a01b038416600090815260076020526040812080548390811061118f57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060076000876001600160a01b03166001600160a01b0316815260200190815260200160002084815481106111e157634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925591825260089052604090208290555b6001600160a01b038416600090815260076020526040902080548061123657634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156112a95760405162461bcd60e51b8152600401610364919061178b565b50600081815260016020818152604080842080546001600160a01b0319166001600160a01b0388169081179091558085526007835290842080548085018255818652928520909201859055909252905461130391906117a7565b6000918252600860205260409091205550565b60408051808201909152600681526530303330303160d01b60208201526001600160a01b03831661135a5760405162461bcd60e51b8152600401610364919061178b565b50600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156113b25760405162461bcd60e51b8152600401610364919061178b565b506113bd8282611252565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470811580159061142d5750808214155b949350505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528291906001600160a01b031661148e5760405162461bcd60e51b8152600401610364919061178b565b506000828152600160205260409020546001600160a01b03166114b08361108d565b6114ba81846110ab565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b80356001600160a01b038116811461030857600080fd5b60006020828403121561151f578081fd5b611528826114f7565b9392505050565b60008060408385031215611541578081fd5b61154a836114f7565b9150611558602084016114f7565b90509250929050565b600080600060608486031215611575578081fd5b61157e846114f7565b925061158c602085016114f7565b9150604084013590509250925092565b6000806000806000608086880312156115b3578081fd5b6115bc866114f7565b94506115ca602087016114f7565b935060408601359250606086013567ffffffffffffffff808211156115ed578283fd5b818801915088601f830112611600578283fd5b81358181111561160e578384fd5b89602082850101111561161f578384fd5b9699959850939650602001949392505050565b60008060408385031215611644578182fd5b61164d836114f7565b915060208301358015158114611661578182fd5b809150509250929050565b6000806040838503121561167e578182fd5b611687836114f7565b946020939093013593505050565b6000602082840312156116a6578081fd5b8135611528816117ca565b6000602082840312156116c2578081fd5b8151611528816117ca565b6000602082840312156116de578081fd5b5035919050565b60008151808452815b8181101561170a576020818501810151868301820152016116ee565b8181111561171b5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261177660808301846116e5565b9695505050505050565b901515815260200190565b60006020825261152860208301846116e5565b90815260200190565b6000828210156117c557634e487b7160e01b81526011600452602481fd5b500390565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461089057600080fdfea26469706673582212201fcd664a5f0af1c12cb0509b3f282db7df84972395ede320f18b89311d544f2264736f6c63430008000033";

type NFTokenEnumerableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTokenEnumerableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTokenEnumerableMock__factory extends ContractFactory {
  constructor(...args: NFTokenEnumerableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTokenEnumerableMock> {
    return super.deploy(overrides || {}) as Promise<NFTokenEnumerableMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTokenEnumerableMock {
    return super.attach(address) as NFTokenEnumerableMock;
  }
  override connect(signer: Signer): NFTokenEnumerableMock__factory {
    return super.connect(signer) as NFTokenEnumerableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTokenEnumerableMockInterface {
    return new utils.Interface(_abi) as NFTokenEnumerableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTokenEnumerableMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTokenEnumerableMock;
  }
}
