/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Marry3Token,
  Marry3TokenInterface,
} from "../../../../contracts/marry3/marry3-token.sol/Marry3Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenIdA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenIdB",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_CURRENT_OWNER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_addressB",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_a",
        type: "address",
      },
      {
        internalType: "address",
        name: "_b",
        type: "address",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_a",
        type: "address",
      },
    ],
    name: "getPairInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "partner",
            type: "address",
          },
          {
            internalType: "enum ERC721_520.Sex",
            name: "sex",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ERC721_520.AddressInfo",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "partner",
            type: "address",
          },
          {
            internalType: "enum ERC721_520.Sex",
            name: "sex",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "time",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ERC721_520.AddressInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_addressB",
        type: "address",
      },
      {
        internalType: "enum ERC721_520.Sex",
        name: "_sexA",
        type: "uint8",
      },
      {
        internalType: "enum ERC721_520.Sex",
        name: "_sexB",
        type: "uint8",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6000600881905560a0604081905260808290526200002191600a919062000166565b503480156200002f57600080fd5b50600060208181527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff1990811660019081179092556380ac58cd60e01b9093527ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed780800805490931617909155600980546001600160a01b03191633179055604080518082019091526006808252654d617272793360d01b91909201908152620000dc91908162000166565b50604080518082019091526012808252714d617272793320436572746966696361746560701b6020909201918252620001189160079162000166565b5060408051808201909152601c8082527f68747470733a2f2f6d61727279332e6c6f76652f6170692f6d6574610000000060209092019182526200015f91600a9162000166565b5062000249565b82805462000174906200020c565b90600052602060002090601f016020900481019282620001985760008555620001e3565b82601f10620001b357805160ff1916838001178555620001e3565b82800160010185558215620001e3579182015b82811115620001e3578251825591602001919060010190620001c6565b50620001f1929150620001f5565b5090565b5b80821115620001f15760008155600101620001f6565b600181811c908216806200022157607f821691505b602082108114156200024357634e487b7160e01b600052602260045260246000fd5b50919050565b61257980620002596000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c8063860d248a116100e3578063c87b56dd1161008c578063e985e9c511610066578063e985e9c514610385578063f2fde38b146103c1578063f3fe3bc3146103d457600080fd5b8063c87b56dd1461033e578063d4ff73f714610351578063d81810b21461037257600080fd5b8063a22cb465116100bd578063a22cb46514610305578063b3154db014610318578063b88d4fde1461032b57600080fd5b8063860d248a146102c55780638da5cb5b146102ea57806395d89b41146102fd57600080fd5b806323b872dd1161014557806355f804b31161011f57806355f804b31461028c5780636352211e1461029f57806370a08231146102b257600080fd5b806323b872dd1461025357806327fc84a31461026657806342842e0e1461027957600080fd5b8063081812fc11610176578063081812fc14610201578063095ea7b31461022c57806318160ddd1461024157600080fd5b806301ffc9a71461019257806306fdde03146101ec575b600080fd5b6101d76101a0366004611f4c565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6101f46103f9565b6040516101e39190611fc8565b61021461020f366004611fdb565b61048b565b6040516001600160a01b0390911681526020016101e3565b61023f61023a366004612010565b61050d565b005b6008545b6040519081526020016101e3565b61023f61026136600461203a565b6106dd565b61023f610274366004612076565b610898565b61023f61028736600461203a565b6108f0565b61023f61029a3660046120f2565b610910565b6102146102ad366004611fdb565b610966565b6102456102c0366004612134565b6109be565b6101f46040518060400160405280600681526020016518189c18181960d11b81525081565b600954610214906001600160a01b031681565b6101f4610a26565b61023f61031336600461214f565b610a35565b6101d7610326366004612076565b610aa1565b61023f61033936600461218b565b610c9b565b6101f461034c366004611fdb565b610ce4565b61036461035f366004612134565b610d1e565b6040516101e392919061225a565b61023f610380366004612285565b610f38565b6101d7610393366004612076565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b61023f6103cf366004612134565b610f94565b6101f46040518060400160405280600681526020016530313830303160d01b81525081565b606060068054610408906122d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610434906122d9565b80156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b5050505050905090565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b03166104eb5760405162461bcd60e51b81526004016104e29190611fc8565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b03163381148061055857506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020017f3030333030330000000000000000000000000000000000000000000000000000815250906105ac5760405162461bcd60e51b81526004016104e29190611fc8565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166106065760405162461bcd60e51b81526004016104e29190611fc8565b50600084815260016020908152604091829020548251808401909352600683527f3030333030380000000000000000000000000000000000000000000000000000918301919091526001600160a01b039081169190871682141561067d5760405162461bcd60e51b81526004016104e29190611fc8565b5060008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60008181526001602052604090205481906001600160a01b03163381148061071b57506000828152600260205260409020546001600160a01b031633145b8061074957506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b815250906107865760405162461bcd60e51b81526004016104e29190611fc8565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166107e05760405162461bcd60e51b81526004016104e29190611fc8565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b0390811691908816821461083f5760405162461bcd60e51b81526004016104e29190611fc8565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b0387166108845760405162461bcd60e51b81526004016104e29190611fc8565b5061088f868661107f565b50505050505050565b60095460408051808201909152600681526530313830303160d01b6020820152906001600160a01b031633146108e15760405162461bcd60e51b81526004016104e29190611fc8565b506108ec82826110c7565b5050565b61090b83838360405180602001604052806000815250611330565b505050565b60095460408051808201909152600681526530313830303160d01b6020820152906001600160a01b031633146109595760405162461bcd60e51b81526004016104e29190611fc8565b5061090b600a8383611e82565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b031690816105075760405162461bcd60e51b81526004016104e29190611fc8565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b038316610a055760405162461bcd60e51b81526004016104e29190611fc8565b506001600160a01b0382166000908152600360205260409020545b92915050565b606060078054610408906122d9565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b03828116600090815260056020908152604080832081516080810190925280549485168252929384939192830190600160a01b900460ff166002811115610af157610af16121fa565b6002811115610b0257610b026121fa565b815260200160018201548152602001600282015481525050905060006001600160a01b031681600001516001600160a01b031614156040518060400160405280600e81526020016d3737ba103b30b634b2103830b4b960911b81525090610b7c5760405162461bcd60e51b81526004016104e29190611fc8565b506001600160a01b038381166000908152600560209081526040808320815160808101909252805494851682529293909291830190600160a01b900460ff166002811115610bcc57610bcc6121fa565b6002811115610bdd57610bdd6121fa565b815260200160018201548152602001600282015481525050905060006001600160a01b031681600001516001600160a01b031614156040518060400160405280600e81526020016d3737ba103b30b634b2103830b4b960911b81525090610c575760405162461bcd60e51b81526004016104e29190611fc8565b50836001600160a01b031682600001516001600160a01b0316148015610c925750846001600160a01b031681600001516001600160a01b0316145b95945050505050565b610cdd85858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061133092505050565b5050505050565b60606000610cf18361160d565b9050600a81604051602001610d0792919061232a565b604051602081830303815290604052915050919050565b610d4a604080516080810190915260008082526020820190815260200160008152602001600081525090565b610d76604080516080810190915260008082526020820190815260200160008152602001600081525090565b6001600160a01b038381166000908152600560209081526040808320815160808101909252805494851682529293909291830190600160a01b900460ff166002811115610dc557610dc56121fa565b6002811115610dd657610dd66121fa565b815260200160018201548152602001600282015481525050905060006001600160a01b031681600001516001600160a01b031614156040518060400160405280600e81526020016d3737ba103b30b634b2103830b4b960911b81525090610e505760405162461bcd60e51b81526004016104e29190611fc8565b5080516001600160a01b039081166000908152600560209081526040808320815160808101909252805494851682529293909291830190600160a01b900460ff166002811115610ea257610ea26121fa565b6002811115610eb357610eb36121fa565b815260200160018201548152602001600282015481525050905060006001600160a01b031681600001516001600160a01b031614156040518060400160405280600e81526020016d3737ba103b30b634b2103830b4b960911b81525090610f2d5760405162461bcd60e51b81526004016104e29190611fc8565b509094909350915050565b60095460408051808201909152600681526530313830303160d01b6020820152906001600160a01b03163314610f815760405162461bcd60e51b81526004016104e29190611fc8565b50610f8e84848484611618565b50505050565b60095460408051808201909152600681526530313830303160d01b6020820152906001600160a01b03163314610fdd5760405162461bcd60e51b81526004016104e29190611fc8565b5060408051808201909152600681526518189c18181960d11b60208201526001600160a01b0382166110225760405162461bcd60e51b81526004016104e29190611fc8565b506009546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600980546001600160a01b0319166001600160a01b0392909216919091179055565b60405162461bcd60e51b815260206004820152600e60248201527f63616e6f74207472616e7366657200000000000000000000000000000000000060448201526064016104e2565b6001600160a01b038281166000908152600560209081526040808320815160808101909252805494851682529293909291830190600160a01b900460ff166002811115611116576111166121fa565b6002811115611127576111276121fa565b8152602001600182015481526020016002820154815250509050816001600160a01b031681600001516001600160a01b0316146040518060400160405280600e81526020016d3737ba103b30b634b2103830b4b960911b8152509061119f5760405162461bcd60e51b81526004016104e29190611fc8565b506001600160a01b038281166000908152600560209081526040808320815160808101909252805494851682529293909291830190600160a01b900460ff1660028111156111ef576111ef6121fa565b6002811115611200576112006121fa565b8152602001600182015481526020016002820154815250509050836001600160a01b031681600001516001600160a01b0316146040518060400160405280600e81526020016d3737ba103b30b634b2103830b4b960911b815250906112785760405162461bcd60e51b81526004016104e29190611fc8565b506112868260600151611a0e565b6112938160600151611a0e565b6001600160a01b038481166000908152600560209081526040808320805474ffffffffffffffffffffffffffffffffffffffffff19908116825560018083018690556002928301869055958916855282852080549091168155948501849055939093019190915590513381527f083a2bd76492cfa12383a9b3d6b1b20c7e382a0c0ec4f29da7016fe37203e9c8910160405180910390a150505050565b60008281526001602052604090205482906001600160a01b03163381148061136e57506000828152600260205260409020546001600160a01b031633145b8061139c57506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b815250906113d95760405162461bcd60e51b81526004016104e29190611fc8565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b03166114335760405162461bcd60e51b81526004016104e29190611fc8565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190891682146114925760405162461bcd60e51b81526004016104e29190611fc8565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b0388166114d75760405162461bcd60e51b81526004016104e29190611fc8565b506114e2878761107f565b6114f4876001600160a01b0316611ae0565b1561160357604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a029061152e9033908d908c908c90600401612420565b602060405180830381600087803b15801561154857600080fd5b505af115801561155c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611580919061245c565b60408051808201909152600681527f303033303035000000000000000000000000000000000000000000000000000060208201529091507fffffffff000000000000000000000000000000000000000000000000000000008216630a85bd0160e11b146116005760405162461bcd60e51b81526004016104e29190611fc8565b50505b5050505050505050565b6060610a2082611b1c565b6001600160a01b038481166000908152600560209081526040808320815160808101909252805494851682529293909291830190600160a01b900460ff166002811115611667576116676121fa565b6002811115611678576116786121fa565b815260200160018201548152602001600282015481525050905060006001600160a01b031681600001516001600160a01b0316146040518060400160405280601d81526020017f6164647265737320616c726561647920686173206120706172746e6572000000815250906117005760405162461bcd60e51b81526004016104e29190611fc8565b506001600160a01b038481166000908152600560209081526040808320815160808101909252805494851682529293909291830190600160a01b900460ff166002811115611750576117506121fa565b6002811115611761576117616121fa565b815260200160018201548152602001600282015481525050905060006001600160a01b031681600001516001600160a01b0316146040518060400160405280601d81526020017f6164647265737320616c726561647920686173206120706172746e6572000000815250906117e95760405162461bcd60e51b81526004016104e29190611fc8565b50600060085460016117fb919061248f565b90506118078782611c4e565b60006008546002611818919061248f565b90506118248782611c4e565b60085461183290600261248f565b6008556060808501839052830181905260208401866002811115611858576118586121fa565b9081600281111561186b5761186b6121fa565b90525060208301856002811115611884576118846121fa565b90816002811115611897576118976121fa565b9052506001600160a01b0380881685528881168085524260408088018290528087019190915260009182526005602090815291208651815493166001600160a01b031984168117825591870151879391929091839174ffffffffffffffffffffffffffffffffffffffffff1990911617600160a01b83600281111561191e5761191e6121fa565b021790555060408281015160018301556060909201516002918201556001600160a01b03808a166000908152600560209081529390208651815492166001600160a01b031983168117825593870151879491939092849274ffffffffffffffffffffffffffffffffffffffffff199091161790600160a01b9084908111156119a8576119a86121fa565b021790555060408281015160018301556060928301516002909201919091558051338152602081018590529081018390527f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff910160405180910390a15050505050505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528291906001600160a01b0316611a675760405162461bcd60e51b81526004016104e29190611fc8565b50600082815260016020908152604080832054600290925290912080546001600160a01b03191690556001600160a01b0316611aa38184611d31565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611b145750808214155b949350505050565b606081611b5c57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611b865780611b70816124a7565b9150611b7f9050600a836124d8565b9150611b60565b60008167ffffffffffffffff811115611ba157611ba16124ec565b6040519080825280601f01601f191660200182016040528015611bcb576020820181803683370190505b5090505b8415611b1457611be0600183612502565b9150611bed600a86612519565b611bf890603061248f565b60f81b818381518110611c0d57611c0d61252d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611c47600a866124d8565b9450611bcf565b60408051808201909152600681526530303330303160d01b60208201526001600160a01b038316611c925760405162461bcd60e51b81526004016104e29190611fc8565b50600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b031615611cea5760405162461bcd60e51b81526004016104e29190611fc8565b50611cf58282611dda565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03848116911614611d8c5760405162461bcd60e51b81526004016104e29190611fc8565b506001600160a01b0382166000908152600360205260408120805460019290611db6908490612502565b9091555050600090815260016020526040902080546001600160a01b031916905550565b600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b031615611e315760405162461bcd60e51b81526004016104e29190611fc8565b50600081815260016020818152604080842080546001600160a01b0319166001600160a01b038816908117909155845260039091528220805491929091611e7990849061248f565b90915550505050565b828054611e8e906122d9565b90600052602060002090601f016020900481019282611eb05760008555611ef6565b82601f10611ec95782800160ff19823516178555611ef6565b82800160010185558215611ef6579182015b82811115611ef6578235825591602001919060010190611edb565b50611f02929150611f06565b5090565b5b80821115611f025760008155600101611f07565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114611f4957600080fd5b50565b600060208284031215611f5e57600080fd5b8135611f6981611f1b565b9392505050565b60005b83811015611f8b578181015183820152602001611f73565b83811115610f8e5750506000910152565b60008151808452611fb4816020860160208601611f70565b601f01601f19169290920160200192915050565b602081526000611f696020830184611f9c565b600060208284031215611fed57600080fd5b5035919050565b80356001600160a01b038116811461200b57600080fd5b919050565b6000806040838503121561202357600080fd5b61202c83611ff4565b946020939093013593505050565b60008060006060848603121561204f57600080fd5b61205884611ff4565b925061206660208501611ff4565b9150604084013590509250925092565b6000806040838503121561208957600080fd5b61209283611ff4565b91506120a060208401611ff4565b90509250929050565b60008083601f8401126120bb57600080fd5b50813567ffffffffffffffff8111156120d357600080fd5b6020830191508360208285010111156120eb57600080fd5b9250929050565b6000806020838503121561210557600080fd5b823567ffffffffffffffff81111561211c57600080fd5b612128858286016120a9565b90969095509350505050565b60006020828403121561214657600080fd5b611f6982611ff4565b6000806040838503121561216257600080fd5b61216b83611ff4565b91506020830135801515811461218057600080fd5b809150509250929050565b6000806000806000608086880312156121a357600080fd5b6121ac86611ff4565b94506121ba60208701611ff4565b935060408601359250606086013567ffffffffffffffff8111156121dd57600080fd5b6121e9888289016120a9565b969995985093965092949392505050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03815116825260208101516003811061224057634e487b7160e01b600052602160045260246000fd5b602083015260408181015190830152606090810151910152565b61010081016122698285612210565b611f696080830184612210565b80356003811061200b57600080fd5b6000806000806080858703121561229b57600080fd5b6122a485611ff4565b93506122b260208601611ff4565b92506122c060408601612276565b91506122ce60608601612276565b905092959194509250565b600181811c908216806122ed57607f821691505b6020821081141561050757634e487b7160e01b600052602260045260246000fd5b60008151612320818560208601611f70565b9290920192915050565b600080845481600182811c91508083168061234657607f831692505b602080841082141561236657634e487b7160e01b86526022600452602486fd5b81801561237a576001811461238b576123b8565b60ff198616895284890196506123b8565b60008b81526020902060005b868110156123b05781548b820152908501908301612397565b505084890196505b505050505050610c926123f76123f1837f2f00000000000000000000000000000000000000000000000000000000000000815260010190565b8661230e565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b60006001600160a01b038087168352808616602084015250836040830152608060608301526124526080830184611f9c565b9695505050505050565b60006020828403121561246e57600080fd5b8151611f6981611f1b565b634e487b7160e01b600052601160045260246000fd5b600082198211156124a2576124a2612479565b500190565b60006000198214156124bb576124bb612479565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826124e7576124e76124c2565b500490565b634e487b7160e01b600052604160045260246000fd5b60008282101561251457612514612479565b500390565b600082612528576125286124c2565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212202d84b8cc757082b705e227c4bcaf9d5f7f7b3c6146a9268f4c66827529f69d8d64736f6c63430008090033";

type Marry3TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Marry3TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marry3Token__factory extends ContractFactory {
  constructor(...args: Marry3TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Marry3Token> {
    return super.deploy(overrides || {}) as Promise<Marry3Token>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Marry3Token {
    return super.attach(address) as Marry3Token;
  }
  override connect(signer: Signer): Marry3Token__factory {
    return super.connect(signer) as Marry3Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Marry3TokenInterface {
    return new utils.Interface(_abi) as Marry3TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marry3Token {
    return new Contract(address, _abi, signerOrProvider) as Marry3Token;
  }
}
