// Schema for an identity service for a SaaS
// This service tracks existing users & their accounts, as well as invites for users who haven't joined yet

generator client {
    provider        = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Offers {
    id         String    @id @default(uuid())
    type       Int       @default(0) // 0 = mint, 1 = burn
    Aaddress   String
    Baddress   String?
    contractId String?
    contractAddr String?
    Asignature String
    Bsignature String?
    Asex       Int?
    Bsex       Int?
    Aname      String?
    Bname      String?
    status     Int       @default(0) // 0: a signs，1: b signs，2: minted -1 : revoked
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
    AtokenId   String?
    BtokenId   String?
    tokenId    String?
    Acomment   String?
    Bcomment   String?
    Acover     String?
    Bcover     String?
    cover      String?
    imageData  String?
    imageDataB String?
    bgIndex    Int?
    blockNo    String?
    mintedAt   DateTime?
    burnAuth   Int?     @default(0)
    nftName    String?
    expirationDate DateTime?
    totalMinted Int?    @default(0)
    totalSigned Int?    @default(0)
}

model Contract {
    id         String    @id @default(uuid())
    Caddress   String    
    Iaddress   String
    nftName    String
    burnAuth   Int 
}

model Token {
    id        String   @id @default(uuid())
    offersId  String   
    tokenId   String?
    Bsignature String
    Bname     String
    Iaddress  String
    Raddress  String
    Caddress  String
    createdAt DateTime @default(now())
    minted    Int      @default(0)
}
